{"ast":null,"code":"var _jsxFileName = \"/Users/christianmark/Desktop/Projects/HelmetDetectionAI/src/components/timer.js\";\nimport React from \"react\";\nimport '../components/timer.css';\n\nconst Timer = () => {\n  const [time, setTime] = React.useState(0);\n  const [timerOn, setTimerOn] = React.useState(false);\n  React.useEffect(() => {\n    let interval = null;\n\n    if (timerOn) {\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime + 10);\n      }, 10);\n    } else if (!timerOn) {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [timerOn]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Timers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Helmet Detection \"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, (\"0\" + Math.floor(time / 60000 % 60)).slice(-2), \":\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, (\"0\" + Math.floor(time / 1000 % 60)).slice(-2), \":\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, (\"0\" + time / 10 % 100).slice(-2))));\n};\n\nexport default Timer;","map":{"version":3,"sources":["/Users/christianmark/Desktop/Projects/HelmetDetectionAI/src/components/timer.js"],"names":["React","Timer","time","setTime","useState","timerOn","setTimerOn","useEffect","interval","setInterval","prevTime","clearInterval","Math","floor","slice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,KAAK,CAACI,QAAN,CAAe,CAAf,CAAxB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,KAAK,CAACI,QAAN,CAAe,KAAf,CAA9B;AAEAJ,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AACpB,QAAIC,QAAQ,GAAG,IAAf;;AAEA,QAAIH,OAAJ,EAAa;AACXG,MAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC3BN,QAAAA,OAAO,CAAEO,QAAD,IAAcA,QAAQ,GAAG,EAA1B,CAAP;AACD,OAFqB,EAEnB,EAFmB,CAAtB;AAGD,KAJD,MAIO,IAAI,CAACL,OAAL,EAAc;AACnBM,MAAAA,aAAa,CAACH,QAAD,CAAb;AACD;;AAED,WAAO,MAAMG,aAAa,CAACH,QAAD,CAA1B;AACD,GAZD,EAYG,CAACH,OAAD,CAZH;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO,CAAC,MAAMO,IAAI,CAACC,KAAL,CAAYX,IAAI,GAAG,KAAR,GAAiB,EAA5B,CAAP,EAAwCY,KAAxC,CAA8C,CAAC,CAA/C,CAAP,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO,CAAC,MAAMF,IAAI,CAACC,KAAL,CAAYX,IAAI,GAAG,IAAR,GAAgB,EAA3B,CAAP,EAAuCY,KAAvC,CAA6C,CAAC,CAA9C,CAAP,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO,CAAC,MAAQZ,IAAI,GAAG,EAAR,GAAc,GAAtB,EAA4BY,KAA5B,CAAkC,CAAC,CAAnC,CAAP,CAHF,CAFF,CADF;AAWD,CA7BD;;AA+BA,eAAeb,KAAf","sourcesContent":["import React from \"react\";\nimport '../components/timer.css'\n\nconst Timer = () => {\n  const [time, setTime] = React.useState(0);\n  const [timerOn, setTimerOn] = React.useState(false);\n\n  React.useEffect(() => {\n    let interval = null;\n\n    if (timerOn) {\n      interval = setInterval(() => {\n        setTime((prevTime) => prevTime + 10);\n      }, 10);\n    } else if (!timerOn) {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [timerOn]);\n\n  return (\n    <div className=\"Timers\">\n      <h2>Helmet Detection </h2>\n      <div id=\"display\">\n        <span>{(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:</span>\n        <span>{(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}:</span>\n        <span>{(\"0\" + ((time / 10) % 100)).slice(-2)}</span>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Timer;"]},"metadata":{},"sourceType":"module"}